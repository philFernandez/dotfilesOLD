#!/usr/local/bin/bash
####################################
# fuzzy finder for manpages
# usage: fman <take no parameters> OR fman -p for preview mode
# depends on $HOME/.bin/cman for color output man pages
####################################
# Funtion for returning file names from all directories containing manpages
function get_manpages() {
  # extract the manpages
  local COMMAND_LINE_DEV_MANPAGES1=$(find -L \
    /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/share/man \
    -type f | cut -f11 -d"/" | sed -e 's/\.[^.]*$//')
  local COMMAND_LINE_DEV_MANPAGES2=$(find -L \
    /Library/Developer/CommandLineTools/usr/share/man \
    -type f | cut -f9 -d"/" | sed -e 's/\.[^.]*$//')
  local SYS_MANPAGES=$(find -L /usr/share/man -type f \
    | cut -f6 -d"/" | sed -e 's/\.[^.]*$//')
  local BREW_MANPAGES=$(find -L /usr/local/share/man/man* \
    -type f | cut -f7 -d"/" | sed -e 's/\.[^.]*$//')
  # return the man pages
  echo "$COMMAND_LINE_DEV_MANPAGES1"
  echo "$COMMAND_LINE_DEV_MANPAGES2"
  echo "$SYS_MANPAGES"
  echo "$BREW_MANPAGES"
}

function help_msg() {
  cat << EOF
usage: fman [-p]
-p <start in preview mode> {optional}
EOF
}

# call man with all manpages piped to fzf
if [ "$1" != "-h" -a "$1" != "--h" -a "$1" != "--help" ]; then
  # There are some duplicates between the directories so sort and filter
  ALL_MANPAGES=$(sort -u <<< $(get_manpages))
  # The header for fzf
  HEADER="Manpage Fuzzy Finder"
  # Command that fzf will execute when enter is pressed on selected file
  CMD_TO_EXECUTE="LESS+='N' MANWIDTH=105% cman"
  if [ "$1" = "-p" ]; then # start in preview mode
    echo "$ALL_MANPAGES" | \
      fzf --reverse --header="$HEADER" \
      --preview="man {}" --preview-window="down:90%" \
      --prompt="man " --bind "enter:execute($CMD_TO_EXECUTE {})"
  else # start without preview mode
    echo "$ALL_MANPAGES" | \
      fzf --reverse --header="$HEADER" \
      --prompt="man " --bind "enter:execute($CMD_TO_EXECUTE {})"
  fi
else
  help_msg
fi
