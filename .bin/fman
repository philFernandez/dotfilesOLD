#!/usr/local/bin/zsh
############ FUZZY MAN ##############
# fuzzy finder for manpages
# usage: fman <take no parameters> OR fman -p for preview mode
# depends on $HOME/.bin/cman for color output man pages
####################################

RED='\033[38;5;001m'
GREEN='\033[38;5;002m'
YELLOW='\033[38;5;003m'
NC='\033[0m'
BD='\033[1m'

function get_manpages() {
  # Get all directories where man pages are stored
  local mandirs=("${(@s/:/)$(manpath)}")
  local allPackages
  # recurse down into manpath dirs and get individual package names
  for mandir in $mandirs; do
    allPackages+=($mandir/*/*)
  done
  # get rid of empty line (first entry)
  allPackages=($allPackages)
  # Strip full path, and file extensions
  for ((i = 1; i < $#allPackages; i++)); do
    # packages ending in gz have to be striped twice
    if [[ $allPackages[i] =~ gz$ ]]; then
      allPackages[i]=$allPackages[i]:r
    fi
    print $allPackages[i]:t:r
  done
}

function help_msg() {
  cat << EOF
usage: fman [-p] or [-s] [-u] {only zero or one options at a time}
-p <start in preview mode>            {optional}
-s <only show bookmarked manpages>    {optional}
-u <update manpage cache and exit>    {optional}

press ctrl-s on a selected file to bookmark
EOF
}

CACHE="$HOME/.cache/fman/cache"
HEADER="Fuzzy Man"
# Command that fzf will execute when enter is pressed on selected file
if [ -e "$HOME/.bin/cman" ] || [ -e "$HOME/bin/cman" ]; then
  #CMD_TO_EXECUTE="LESS+='N' MANWIDTH=$(tput cols)% cman"
  CMD_TO_EXECUTE="MANWIDTH=$(tput cols)% cman"
else
  #CMD_TO_EXECUTE="LESS+='N' MANWIDTH=$(tput cols)% man"
  CMD_TO_EXECUTE="man"
fi

# if "-h" or "-p" is given we don't want to run get_manpages so we bypass
# that because it is not needed and is resource intensive.
if [ "$1" != "-h" ] && [ "$1" != "--h" ] && [ "$1" != "--help" ] && [ "$1" != "-s" ]; then
  # There are some duplicates between the directories so sort and filter
  if [ "$1" = '-u' ]; then
    print "${YELLOW}Updating fuzzy man cache...${NC}"
    # Call get_manpages to traverse the man page directories
    ALL_MANPAGES=$(sort -u <<< "$(get_manpages)")
    # if the cache dir doesn't exist make it
    [[ ! -d $CACHE:h ]] && mkdir -p $CACHE:h
    # Write package names to a cache file
    echo $ALL_MANPAGES > $CACHE
    exit 0
  else # if called w/o -u
    if [[ ! -d $CACHE:h ]]; then  # error if cache file doesn't exist
      print "${RED}Error       : ${NC}${YELLOW}Need Package Cache${NC}"
      print "${RED}Run Command : ${GREEN}fman -u${NC}"
      exit 1
    fi
    ALL_MANPAGES=$(<$CACHE)
  fi
  # call man with all manpages piped to fzf
  if [ "$1" = "-p" ]; then # start in preview mode
    echo "$ALL_MANPAGES" | \
      fzf -i --reverse --header="$HEADER" \
      --preview="man {}" --preview-window="down:90%" \
      --prompt="man-> " --bind "enter:execute($CMD_TO_EXECUTE {})" \
      --bind "ctrl-s:execute(echo {} >> ~/.saved_manpages)"
  else # start without preview mode
    echo "$ALL_MANPAGES" | \
      fzf -i --reverse --header="$HEADER" \
      --prompt="man " --bind "enter:execute($CMD_TO_EXECUTE {})" \
      --bind "ctrl-s:execute(echo {} >> ~/.saved_manpages)"
  fi
# load up bookmark file if "-s" option is given
elif [ "$1" = '-s' ]; then
    fzf -i --reverse --header="$HEADER {Bookmarks}" < ~/.saved_manpages\
    --preview="man {}" --preview-window="down:90%" \
    --prompt="man-> " --bind "enter:execute($CMD_TO_EXECUTE {})" \
    --bind \
    "ctrl-d:execute(sed '/{}/d' ~/.saved_manpages > \
    ~/.tmp_save && /bin/mv -f ~/.tmp_save ~/.saved_manpages)"
else
  help_msg
fi
