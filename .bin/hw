#!/bin/bash

# Script for adding and removing assignment reminders to files in a
# directory that are automatically catted out to my terminal whenever
# it is opened.
#########################################################################
# For having the reminders always cat out when opening, have to add:
#------------------------------------------------------------------------
# [[ -d ~/.reminders ]] && \
#  (
#  cd ~/.reminders && if [ -s STAT50 ]; then bat STAT50; fi \
#	  && if [ -s CSC133 ]; then bat CSC133; fi \
#	  && if [ -s CSC139 ]; then bat CSC139; fi \
#	  && if [ -s MUSC129 ]; then bat MUSC129; fi
#  )
#------------------------------------------------------------------------
# to ~/.zshrc or ~/.bashrc

# NOTE: the above uses bat instead of cat, but either will work

COURSE="$1"
ASSIG="$2"
DUEDATE="$3"
STATS=~/.reminders/STAT50
MUSIC=~/.reminders/MUSC129
CSC133=~/.reminders/CSC133
CSC139=~/.reminders/CSC139

# commented code is for writing to a central file for more detailed searches and filters
# this may be used in future implimentations
recordAssig() {
  local theCourseWriteFile=$1
  local theAssignment=$2
  local theDueDate=$3
  #local centralFile=~/.reminders/.all
  printf  "%s - Due: %s\n" "$theAssignment" "$theDueDate" >> "$theCourseWriteFile"
  #printf  "%s - Due: %s\n" "$(basename "$theCourseWriteFile"): \
 #$theAssignment" "$theDueDate" >> "$centralFile"
}

removeAssig() {
  # One of the paths from above passed in
  local theCourse=$1
  # The line number to remove and archive
  local theLineNumber=$2
  local archiveFile # create the path for an archive file to move the
                    # delted line into.
  archiveFile="$(dirname "$theCourse")/.$(basename "$theCourse")_archive"
  if [ "$3" == 1 ]; then
    # Move line into archive file
    gsed -n -e "${theLineNumber}p" "$theCourse" >> "$archiveFile"
  fi

  # Delete line
  gsed -i -e "${theLineNumber}d" "$theCourse"
}

usage() {
  echo "ADD:"
  echo "usage: $(basename "$0") <[stats][music][csc133][csc139]> <assignment> <due date>"
  echo
  echo "ARCHIVE:"
  echo "usage: $(basename "$0") <[stats][music][csc133][csc139]> -d <line number>"
  echo
  echo "DELETE:"
  echo "usage: $(basename "$0") <[stats][music][csc133][csc139]> -D <line number>"
}


if [ -d ~/.reminders ]; then
  if [ $# == 3 ]; then
    case $COURSE in
      "stats")
        if [ "$2" == '-d' ]; then # TODO: check if $3 is a number
          removeAssig "$STATS" "$3" 1
        elif [ "$2" == '-D' ]; then
          removeAssig "$STATS" "$3" 0
        else
          recordAssig "$STATS" "$ASSIG" "$DUEDATE"
        fi
        ;;
      "music")
        if [ "$2" == '-d' ]; then
          removeAssig "$MUSIC" "$3" 1
        elif [ "$2" == '-D' ]; then
          removeAssig "$MUSIC" "$3" 0
        else
          recordAssig "$MUSIC" "$ASSIG" "$DUEDATE"
        fi
        ;;
      "csc133")
        if [ "$2" == '-d' ]; then
          removeAssig "$CSC133" "$3" 1
        elif [ "$2" == '-D' ]; then
          removeAssig "$CSC133" "$3" 0
        else
          recordAssig "$CSC133" "$ASSIG" "$DUEDATE"
        fi
        ;;
      "csc139")
        if [ "$2" == '-d' ]; then
          removeAssig "$CSC139" "$3" 1
        elif [ "$2" == '-D' ]; then
          removeAssig "$CSC139" "$3" 0
        else
          recordAssig "$CSC139" "$ASSIG" "$DUEDATE"
        fi
        ;;
      *)
        echo 'invalid input'
        usage
        ;;
    esac
  else
    usage
  fi
else # embedded python3 for color output
	  # (bash doesnt support this)
	python3 << END
print('\u001b[38;5;226mrun command: \u001b[38;5;069m<remon> \
\u001b[38;5;226mto turn on reminders')
END
fi


