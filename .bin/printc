#!/bin/zsh

usage() {
  print "Usage: printc [-u] [-i] [-b] r g b 'message'" 1>&2
  print "\nDefaults to white if r g b are ommited"
  print "but if any of r g b are included, they must all be present"
  print "\n-u -i -b are optionally for underline italic and bold"
}


showall() {
  local all_colors=($@)
  (
  for color_v in $all_colors; do
    printc -b -C $color_v "$color_v"
  done
  )
}

USED_BUILTIN=0
UL=
BD=
IT=
RS="\033[0m"
BUILT_IN_COLOR=

typeset -A built_in_colors
built_in_colors=(
  cayenne '148 017 000'
  mocha '148 082 000'
  asparagus '146 144 000'
  fern '079 143 000'
  clover '000 143 000'
  moss '000 144 081'
)

# getopts takes care of -u -i -b parameters
# in any order together or seperate.
# -uib = -u -i -b
while getopts ":C:ubil" opt; do
  case "$opt" in
    C )
      USED_BUILTIN=1
      BUILT_IN_COLOR=$built_in_colors[$OPTARG]
      ;;
    u ) # process option -u
      UL="\033[4m" # underline
      ;;
    b ) # process option -b
      BD="\033[1m" # bold
      ;;
    i ) # process option -i
      IT="\033[3m" # italic
      ;;
    l )
      all_colors=( ${(k)built_in_colors} )
      showall $all_colors
      exit 0
      ;;
    ? )
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1)) # make positional parameters start back at $1

if [[ $USED_BUILTIN == 1 ]]; then
  R=$BUILT_IN_COLOR[1,3]
  G=$BUILT_IN_COLOR[5,7]
  B=$BUILT_IN_COLOR[9,11]
  MSG=$@
else
  if [[ $# == 4 ]]; then
    R=$1
    G=$2
    B=$3
    MSG=$4
  elif [[ $# == 1 ]]; then
    R=255
    G=255
    B=255
    MSG=$1
  else
    usage
  fi
fi


print "${UL}${BD}${IT}\033[38;2;${R};${G};${B}m${MSG}${RS}"
